
name: Test Backend

on:
  push:
    branches: [ main, master, dev ]
    paths:
      - "backend/**"
      - ".github/workflows/**"
  pull_request:
    branches: [ main, master, dev ]
    paths:
      - "backend/**"
      - ".github/workflows/**"
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_app_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          load: true
          tags: backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build test image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.test
          load: true
          tags: backend-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: |
          mkdir -p uploads
          docker run --network host \
            -e TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_app_db \
            -e LLM_API_URL=http://localhost:11434/api/generate \
            -v $(pwd)/uploads:/app/uploads \
            backend-test:latest pytest -v --cov=app --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: false
